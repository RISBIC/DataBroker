<?xml version="1.0" encoding="UTF-8"?>

<!--                                                                                                          -->
<!-- Copyright (c) 2013-2014, Arjuna Technologies Limited, Newcastle-upon-Tyne, England. All rights reserved. -->
<!--                                                                                                          -->

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:h="http://java.sun.com/jsf/html" xmlns:f="http://java.sun.com/jsf/core" xmlns:rich="http://richfaces.org/rich" xmlns:a4j="http://richfaces.org/a4j">
    <ui:composition template="../template.xhtml">
        <ui:define name="title">Data Adverts</ui:define>

        <ui:define name="head">
            <link rel="stylesheet" type="text/css" href="dataadvert_style.css"/>
        </ui:define>

        <ui:define name="body">

            <f:event type="preRenderView" listener="#{advert.doLoad(dataviews.dataViewConnectionURLs, dataviews.dataViewRequesterIds, auth.username)}"/>

            <!--<h:form>
                <a4j:poll id="poll" interval="5000" enabled="#{advert.getAsyncLoadInProgress()}" reRender="poll,advertsJson" />
            </h:form>-->


            <h:form id="advertsForm" name="advertsForm" styleClass="dataadverts">
                <h1>Data Adverts</h1>
                <h:panelGroup styleClass="dataadvert-error" layout="block" rendered="#{not empty dataadvert.errorMessage}">
                    <h:outputText styleClass="dataadvert-error-title" value="Error Message: "/>
                    <h:outputText styleClass="dataadvert-error-message" value="#{dataadvert.errorMessage}"/>
                </h:panelGroup>
                <div class="row">
                    <div class="col-md-4">
                        <h4>Filters go here</h4>
                    </div>
                    <div class="col-md-8">
                        <div class="row">
                            <div class="col-md-12">
                                <input type="text" class="form-control input-large" placeholder="Search..." data-bind="value: filter, valueUpdate: 'afterkeydown'" />
                            </div>
                        </div>
                        <div id="advert-list" class="row" data-bind="foreach: filteredItems">
                            <div class="col-md-12 advert"  data-bind="click: $parent.viewItem">
                                <span class="hidden" data-bind="text: commandId"></span>
                                <h3 data-bind="text: name"></h3>
                                <p data-bind="text: summary"></p>
                                <p data-bind="text: description"></p>
                                <small data-bind="visible: tags.length > 0"><i class="fa fa-tag"></i></small>
                                <hr />
                            </div>
                        </div>
                    </div>
                </div>
                <ui:repeat id="commandLinks" var="_advert" varStatus="status" value="#{advert.adverts}">
                    <h:commandLink styleClass="hidden" id="link" action="#{advert.doLoad(_advert.serviceURL, _advert.requesterId, auth.username, _advert.metadataPath, _advert.metadataId)}"></h:commandLink>
                </ui:repeat>
                <script id="advertsJson" type="text/javascript">

                    var allAdverts = [
                        <ui:repeat var="_advert" varStatus="status" value="#{advert.adverts}">
                        {
                            commandId: 'advert-#{status.index}',
                            name: '#{_advert.node.name}',
                            summary: '#{_advert.node.summary}',
                            description: '#{_advert.node.description}',
                            //tags: #{_advert.node.tags.size()},
                            tags: 2,
                            children: #{_advert.node.childNodes.size()},
                            serviceURL: '#{_advert.serviceURL}',
                            requesterId: '#{_advert.requesterId}',
                            metadataId: '#{_advert.metadataId}',
                            metadataPath: '#{_advert.metadataPath}',
                            isRootNode: #{_advert.isRootNode}
                        },
                        </ui:repeat>
                        ];

                    console.log(allAdverts);

                </script>
            </h:form>
            <script type="text/javascript">

                function Advert(advert) {
                    this.commandId = ko.observable(advert.commandId),
                    this.name = ko.observable(advert.name),
                    this.summary = ko.observable(advert.summary),
                    this.description = ko.observable(advert.description),
                    this.tags = ko.observable(advert.tags),
                    this.children = ko.observable(advert.children)
                }

                var viewModel = {
                    categories: ["Bread", "Dairy", "Fruits", "Vegetables"],
                    items: ko.observableArray([]),
                    filter: ko.observable(""),
                    search: ko.observable(""),
                    viewItem: function(advert) {

                        var linkNumber = advert.commandId().replace('advert-', '');

                        console.log(advert.commandId());
                        console.log(linkNumber);
                        console.log(document.getElementById('advertsForm:commandLinks:' + linkNumber + ':link'));

                        document.getElementById('advertsForm:commandLinks:' + linkNumber + ':link').click();
                    },
                    addItem: function(advert) {
                        this.items.push(new Advert(advert));
                    },
                    removeItem: function(advert) {
                        this.items.remove(advert);
                    }
                };

                viewModel.filteredItems = ko.computed(function() {
                    var filter = this.filter().toLowerCase();
                    if (!filter) {
                        return this.items();
                    } else {
                        return ko.utils.arrayFilter(this.items(), function(item) {

                            return item.name().toLowerCase().indexOf(filter) !== -1;
                        });
                    }
                }, viewModel);


                var mappedData = ko.utils.arrayMap(allAdverts, function(advert) {
                    return new Advert(advert);
                });

                viewModel.items(mappedData);

                ko.applyBindings(viewModel);

            </script>
        </ui:define>
    </ui:composition>
</html>
